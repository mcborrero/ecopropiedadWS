//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wsPrueba.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EcoPropiedadEntities : DbContext
    {
        public EcoPropiedadEntities()
            : base("name=EcoPropiedadEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_communitiesbyuser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_communitiesbyuser", idUserParameter);
        }
    
        public virtual ObjectResult<sp_getCitiesbyCountry_Result> sp_getCitiesbyCountry(string iDCountry)
        {
            var iDCountryParameter = iDCountry != null ?
                new ObjectParameter("IDCountry", iDCountry) :
                new ObjectParameter("IDCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCitiesbyCountry_Result>("sp_getCitiesbyCountry", iDCountryParameter);
        }
    
        public virtual ObjectResult<sp_getCountries_Result> sp_getCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCountries_Result>("sp_getCountries");
        }
    
        public virtual ObjectResult<sp_getPlans_Result> sp_getPlans(Nullable<int> cityApply)
        {
            var cityApplyParameter = cityApply.HasValue ?
                new ObjectParameter("cityApply", cityApply) :
                new ObjectParameter("cityApply", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPlans_Result>("sp_getPlans", cityApplyParameter);
        }
    
        public virtual ObjectResult<sp_getTypeBusiness_Result> sp_getTypeBusiness()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTypeBusiness_Result>("sp_getTypeBusiness");
        }
    
        public virtual ObjectResult<sp_typeBusiness_Result> sp_typeBusiness()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_typeBusiness_Result>("sp_typeBusiness");
        }
    
        public virtual ObjectResult<sp_validateUser_Result> sp_validateUser(string codeUser, string passwordUser)
        {
            var codeUserParameter = codeUser != null ?
                new ObjectParameter("codeUser", codeUser) :
                new ObjectParameter("codeUser", typeof(string));
    
            var passwordUserParameter = passwordUser != null ?
                new ObjectParameter("passwordUser", passwordUser) :
                new ObjectParameter("passwordUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_validateUser_Result>("sp_validateUser", codeUserParameter, passwordUserParameter);
        }
    
        public virtual ObjectResult<sp_getdataUser_Result> sp_getdataUser(string codeUser)
        {
            var codeUserParameter = codeUser != null ?
                new ObjectParameter("codeUser", codeUser) :
                new ObjectParameter("codeUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getdataUser_Result>("sp_getdataUser", codeUserParameter);
        }
    
        public virtual ObjectResult<sp_getIssuesByUser_Result> sp_getIssuesByUser(Nullable<int> iDcommunity)
        {
            var iDcommunityParameter = iDcommunity.HasValue ?
                new ObjectParameter("IDcommunity", iDcommunity) :
                new ObjectParameter("IDcommunity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getIssuesByUser_Result>("sp_getIssuesByUser", iDcommunityParameter);
        }
    
        public virtual ObjectResult<sp_validateUserWithMail_Result> sp_validateUserWithMail(string emailUser, string passwordUser)
        {
            var emailUserParameter = emailUser != null ?
                new ObjectParameter("emailUser", emailUser) :
                new ObjectParameter("emailUser", typeof(string));
    
            var passwordUserParameter = passwordUser != null ?
                new ObjectParameter("passwordUser", passwordUser) :
                new ObjectParameter("passwordUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_validateUserWithMail_Result>("sp_validateUserWithMail", emailUserParameter, passwordUserParameter);
        }
    
        public virtual ObjectResult<sp_getDetailsPlaces_Result> sp_getDetailsPlaces(Nullable<int> iDPlace)
        {
            var iDPlaceParameter = iDPlace.HasValue ?
                new ObjectParameter("IDPlace", iDPlace) :
                new ObjectParameter("IDPlace", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDetailsPlaces_Result>("sp_getDetailsPlaces", iDPlaceParameter);
        }
    
        public virtual ObjectResult<sp_getPlacesToReserve_Result> sp_getPlacesToReserve(Nullable<int> iDcommunity)
        {
            var iDcommunityParameter = iDcommunity.HasValue ?
                new ObjectParameter("IDcommunity", iDcommunity) :
                new ObjectParameter("IDcommunity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPlacesToReserve_Result>("sp_getPlacesToReserve", iDcommunityParameter);
        }
    
        public virtual ObjectResult<sp_getReservationsByUser_Result1> sp_getReservationsByUser(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getReservationsByUser_Result1>("sp_getReservationsByUser", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_getProvider_Result> sp_getProvider(Nullable<int> idProvider)
        {
            var idProviderParameter = idProvider.HasValue ?
                new ObjectParameter("idProvider", idProvider) :
                new ObjectParameter("idProvider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getProvider_Result>("sp_getProvider", idProviderParameter);
        }
    
        public virtual ObjectResult<sp_getProvidersByType_Result> sp_getProvidersByType(Nullable<int> iDType)
        {
            var iDTypeParameter = iDType.HasValue ?
                new ObjectParameter("IDType", iDType) :
                new ObjectParameter("IDType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getProvidersByType_Result>("sp_getProvidersByType", iDTypeParameter);
        }
    
        public virtual ObjectResult<sp_getdataUserByEmail_Result> sp_getdataUserByEmail(string emailUser)
        {
            var emailUserParameter = emailUser != null ?
                new ObjectParameter("emailUser", emailUser) :
                new ObjectParameter("emailUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getdataUserByEmail_Result>("sp_getdataUserByEmail", emailUserParameter);
        }
    
        public virtual ObjectResult<sp_getdataUserByID_Result> sp_getdataUserByID(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getdataUserByID_Result>("sp_getdataUserByID", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_setProvider_Result> sp_setProvider(string nameProvider, Nullable<int> typeProvider, string emailProvider, string addressProvider, string latitudeProvider, string altitudeProvider, string descriptionProvider, string imageProvider, Nullable<int> cityProvider, string contactProvider, Nullable<int> typephone1Provider, string numberphone1Provider, Nullable<int> typephone2Provider, string numberphone2Provider)
        {
            var nameProviderParameter = nameProvider != null ?
                new ObjectParameter("nameProvider", nameProvider) :
                new ObjectParameter("nameProvider", typeof(string));
    
            var typeProviderParameter = typeProvider.HasValue ?
                new ObjectParameter("typeProvider", typeProvider) :
                new ObjectParameter("typeProvider", typeof(int));
    
            var emailProviderParameter = emailProvider != null ?
                new ObjectParameter("emailProvider", emailProvider) :
                new ObjectParameter("emailProvider", typeof(string));
    
            var addressProviderParameter = addressProvider != null ?
                new ObjectParameter("addressProvider", addressProvider) :
                new ObjectParameter("addressProvider", typeof(string));
    
            var latitudeProviderParameter = latitudeProvider != null ?
                new ObjectParameter("latitudeProvider", latitudeProvider) :
                new ObjectParameter("latitudeProvider", typeof(string));
    
            var altitudeProviderParameter = altitudeProvider != null ?
                new ObjectParameter("altitudeProvider", altitudeProvider) :
                new ObjectParameter("altitudeProvider", typeof(string));
    
            var descriptionProviderParameter = descriptionProvider != null ?
                new ObjectParameter("descriptionProvider", descriptionProvider) :
                new ObjectParameter("descriptionProvider", typeof(string));
    
            var imageProviderParameter = imageProvider != null ?
                new ObjectParameter("imageProvider", imageProvider) :
                new ObjectParameter("imageProvider", typeof(string));
    
            var cityProviderParameter = cityProvider.HasValue ?
                new ObjectParameter("cityProvider", cityProvider) :
                new ObjectParameter("cityProvider", typeof(int));
    
            var contactProviderParameter = contactProvider != null ?
                new ObjectParameter("contactProvider", contactProvider) :
                new ObjectParameter("contactProvider", typeof(string));
    
            var typephone1ProviderParameter = typephone1Provider.HasValue ?
                new ObjectParameter("typephone1Provider", typephone1Provider) :
                new ObjectParameter("typephone1Provider", typeof(int));
    
            var numberphone1ProviderParameter = numberphone1Provider != null ?
                new ObjectParameter("numberphone1Provider", numberphone1Provider) :
                new ObjectParameter("numberphone1Provider", typeof(string));
    
            var typephone2ProviderParameter = typephone2Provider.HasValue ?
                new ObjectParameter("typephone2Provider", typephone2Provider) :
                new ObjectParameter("typephone2Provider", typeof(int));
    
            var numberphone2ProviderParameter = numberphone2Provider != null ?
                new ObjectParameter("numberphone2Provider", numberphone2Provider) :
                new ObjectParameter("numberphone2Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_setProvider_Result>("sp_setProvider", nameProviderParameter, typeProviderParameter, emailProviderParameter, addressProviderParameter, latitudeProviderParameter, altitudeProviderParameter, descriptionProviderParameter, imageProviderParameter, cityProviderParameter, contactProviderParameter, typephone1ProviderParameter, numberphone1ProviderParameter, typephone2ProviderParameter, numberphone2ProviderParameter);
        }
    
        public virtual ObjectResult<sp_changePassword_Result> sp_changePassword(Nullable<int> iDUser, string newPassword)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("newPassword", newPassword) :
                new ObjectParameter("newPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_changePassword_Result>("sp_changePassword", iDUserParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<sp_createIssue_Result> sp_createIssue(Nullable<int> iDcommunity, string titleIssue, string descriptionIssue, string img1Issue, string img2Issue, Nullable<int> typeIssue)
        {
            var iDcommunityParameter = iDcommunity.HasValue ?
                new ObjectParameter("IDcommunity", iDcommunity) :
                new ObjectParameter("IDcommunity", typeof(int));
    
            var titleIssueParameter = titleIssue != null ?
                new ObjectParameter("titleIssue", titleIssue) :
                new ObjectParameter("titleIssue", typeof(string));
    
            var descriptionIssueParameter = descriptionIssue != null ?
                new ObjectParameter("descriptionIssue", descriptionIssue) :
                new ObjectParameter("descriptionIssue", typeof(string));
    
            var img1IssueParameter = img1Issue != null ?
                new ObjectParameter("img1Issue", img1Issue) :
                new ObjectParameter("img1Issue", typeof(string));
    
            var img2IssueParameter = img2Issue != null ?
                new ObjectParameter("img2Issue", img2Issue) :
                new ObjectParameter("img2Issue", typeof(string));
    
            var typeIssueParameter = typeIssue.HasValue ?
                new ObjectParameter("typeIssue", typeIssue) :
                new ObjectParameter("typeIssue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_createIssue_Result>("sp_createIssue", iDcommunityParameter, titleIssueParameter, descriptionIssueParameter, img1IssueParameter, img2IssueParameter, typeIssueParameter);
        }
    
        public virtual ObjectResult<sp_getTypes_Result1> sp_getTypes(string applytypes)
        {
            var applytypesParameter = applytypes != null ?
                new ObjectParameter("applytypes", applytypes) :
                new ObjectParameter("applytypes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTypes_Result1>("sp_getTypes", applytypesParameter);
        }
    
        public virtual ObjectResult<sp_getNotificationsByUser_Result> sp_getNotificationsByUser(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getNotificationsByUser_Result>("sp_getNotificationsByUser", iDUserParameter);
        }
    
        public virtual int sp_createNotification(Nullable<int> iDcommunity, string titleNotification, string messageNotification, Nullable<int> statusNotification, Nullable<int> typeNotification)
        {
            var iDcommunityParameter = iDcommunity.HasValue ?
                new ObjectParameter("IDcommunity", iDcommunity) :
                new ObjectParameter("IDcommunity", typeof(int));
    
            var titleNotificationParameter = titleNotification != null ?
                new ObjectParameter("titleNotification", titleNotification) :
                new ObjectParameter("titleNotification", typeof(string));
    
            var messageNotificationParameter = messageNotification != null ?
                new ObjectParameter("messageNotification", messageNotification) :
                new ObjectParameter("messageNotification", typeof(string));
    
            var statusNotificationParameter = statusNotification.HasValue ?
                new ObjectParameter("statusNotification", statusNotification) :
                new ObjectParameter("statusNotification", typeof(int));
    
            var typeNotificationParameter = typeNotification.HasValue ?
                new ObjectParameter("typeNotification", typeNotification) :
                new ObjectParameter("typeNotification", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_createNotification", iDcommunityParameter, titleNotificationParameter, messageNotificationParameter, statusNotificationParameter, typeNotificationParameter);
        }
    
        public virtual ObjectResult<sp_getNotificationsByID_Result> sp_getNotificationsByID(Nullable<int> iDNotification, Nullable<int> iDUser)
        {
            var iDNotificationParameter = iDNotification.HasValue ?
                new ObjectParameter("IDNotification", iDNotification) :
                new ObjectParameter("IDNotification", typeof(int));
    
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getNotificationsByID_Result>("sp_getNotificationsByID", iDNotificationParameter, iDUserParameter);
        }
    
        public virtual ObjectResult<sp_readNotification_Result> sp_readNotification(Nullable<int> iDNotification, Nullable<int> iDUser)
        {
            var iDNotificationParameter = iDNotification.HasValue ?
                new ObjectParameter("IDNotification", iDNotification) :
                new ObjectParameter("IDNotification", typeof(int));
    
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_readNotification_Result>("sp_readNotification", iDNotificationParameter, iDUserParameter);
        }
    
        public virtual ObjectResult<sp_getImagesPlace_Result> sp_getImagesPlace(Nullable<int> iDPlace)
        {
            var iDPlaceParameter = iDPlace.HasValue ?
                new ObjectParameter("IDPlace", iDPlace) :
                new ObjectParameter("IDPlace", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getImagesPlace_Result>("sp_getImagesPlace", iDPlaceParameter);
        }
    
        public virtual ObjectResult<sp_setReservations_Result> sp_setReservations(Nullable<int> idplace, Nullable<int> iDUser, Nullable<System.DateTime> dateReserved, Nullable<System.DateTime> dateEvent, string reason, Nullable<int> numberPeople, string time, string notes)
        {
            var idplaceParameter = idplace.HasValue ?
                new ObjectParameter("idplace", idplace) :
                new ObjectParameter("idplace", typeof(int));
    
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var dateReservedParameter = dateReserved.HasValue ?
                new ObjectParameter("dateReserved", dateReserved) :
                new ObjectParameter("dateReserved", typeof(System.DateTime));
    
            var dateEventParameter = dateEvent.HasValue ?
                new ObjectParameter("dateEvent", dateEvent) :
                new ObjectParameter("dateEvent", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            var numberPeopleParameter = numberPeople.HasValue ?
                new ObjectParameter("numberPeople", numberPeople) :
                new ObjectParameter("numberPeople", typeof(int));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_setReservations_Result>("sp_setReservations", idplaceParameter, iDUserParameter, dateReservedParameter, dateEventParameter, reasonParameter, numberPeopleParameter, timeParameter, notesParameter);
        }
    
        public virtual ObjectResult<sp_setAnswerIssue_Result> sp_setAnswerIssue(Nullable<int> iDIssue, string iDUser, string messageAnswer)
        {
            var iDIssueParameter = iDIssue.HasValue ?
                new ObjectParameter("IDIssue", iDIssue) :
                new ObjectParameter("IDIssue", typeof(int));
    
            var iDUserParameter = iDUser != null ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(string));
    
            var messageAnswerParameter = messageAnswer != null ?
                new ObjectParameter("messageAnswer", messageAnswer) :
                new ObjectParameter("messageAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_setAnswerIssue_Result>("sp_setAnswerIssue", iDIssueParameter, iDUserParameter, messageAnswerParameter);
        }
    
        public virtual ObjectResult<sp_getAnswersIssue_Result> sp_getAnswersIssue(Nullable<int> iDIssue)
        {
            var iDIssueParameter = iDIssue.HasValue ?
                new ObjectParameter("IDIssue", iDIssue) :
                new ObjectParameter("IDIssue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAnswersIssue_Result>("sp_getAnswersIssue", iDIssueParameter);
        }
    
        public virtual ObjectResult<sp_getDocuments_Result> sp_getDocuments(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDocuments_Result>("sp_getDocuments", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_getNotificationsUnread_Result> sp_getNotificationsUnread(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getNotificationsUnread_Result>("sp_getNotificationsUnread", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_getProvidersFound_Result> sp_getProvidersFound(string searchtext)
        {
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getProvidersFound_Result>("sp_getProvidersFound", searchtextParameter);
        }
    
        public virtual ObjectResult<sp_getDocumentsByCommunity_Result> sp_getDocumentsByCommunity(Nullable<int> iDCommunity)
        {
            var iDCommunityParameter = iDCommunity.HasValue ?
                new ObjectParameter("IDCommunity", iDCommunity) :
                new ObjectParameter("IDCommunity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDocumentsByCommunity_Result>("sp_getDocumentsByCommunity", iDCommunityParameter);
        }
    
        public virtual ObjectResult<sp_getDocumentsByUser_Result> sp_getDocumentsByUser(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDocumentsByUser_Result>("sp_getDocumentsByUser", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_getCommunitiesByUser_Result> sp_getCommunitiesByUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCommunitiesByUser_Result>("sp_getCommunitiesByUser", idUserParameter);
        }
    
        public virtual ObjectResult<sp_getCountNotificationsUnread_Result> sp_getCountNotificationsUnread(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCountNotificationsUnread_Result>("sp_getCountNotificationsUnread", iDUserParameter);
        }
    
        public virtual ObjectResult<sp_setDataUser_Result> sp_setDataUser(Nullable<int> iDUser, string newPassword, Nullable<int> notifyMail, string emailUser, string numberPhone)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("newPassword", newPassword) :
                new ObjectParameter("newPassword", typeof(string));
    
            var notifyMailParameter = notifyMail.HasValue ?
                new ObjectParameter("notifyMail", notifyMail) :
                new ObjectParameter("notifyMail", typeof(int));
    
            var emailUserParameter = emailUser != null ?
                new ObjectParameter("emailUser", emailUser) :
                new ObjectParameter("emailUser", typeof(string));
    
            var numberPhoneParameter = numberPhone != null ?
                new ObjectParameter("numberPhone", numberPhone) :
                new ObjectParameter("numberPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_setDataUser_Result>("sp_setDataUser", iDUserParameter, newPasswordParameter, notifyMailParameter, emailUserParameter, numberPhoneParameter);
        }
    }
}
